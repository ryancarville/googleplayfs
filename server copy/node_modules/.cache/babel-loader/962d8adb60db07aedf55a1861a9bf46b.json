{"ast":null,"code":"const express = require('express');\n\nconst morgan = require('morgan');\n\nconst cors = require('cors');\n\nconst app = express();\napp.arguments(morgan('common'));\napp.use(cors());\n\nconst playApps = require('./playApps');\n\napp.get('./apps', (req, res) => {\n  const _req$query = req.query,\n        sort = _req$query.sort,\n        _req$query$genres = _req$query.genres,\n        genres = _req$query$genres === void 0 ? '' : _req$query$genres;\n  let results = playApps.filter(app => app.genres.toLowerCase().includes(genres.toLowerCase()));\n\n  if (sort) {\n    if (!['rating', 'app'].includes(sort)) {\n      return res.status(400).send('Sort must be one of rating or app');\n    }\n  }\n\n  if (genres) {\n    if (!['Action', 'Puzzle', 'Strategy', 'Casual', 'Arcade', 'Card'].includes(genres)) return res.status(400).send('That genre does not exsist');\n  }\n\n  if (sort) {\n    results.sort((a, b) => {\n      return a[sort] > b[sort] ? 1 : a[sort] < b[sort] ? -1 : 0;\n    });\n  }\n\n  res.json(results);\n});","map":{"version":3,"sources":["/Users/ryancarville/Desktop/FED_Projects/GooglePlayFullstack/server/src/App.js"],"names":["express","require","morgan","cors","app","arguments","use","playApps","get","req","res","query","sort","genres","results","filter","toLowerCase","includes","status","send","a","b","json"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMG,GAAG,GAAGJ,OAAO,EAAnB;AACAI,GAAG,CAACC,SAAJ,CAAcH,MAAM,CAAC,QAAD,CAApB;AACAE,GAAG,CAACE,GAAJ,CAAQH,IAAI,EAAZ;;AACA,MAAMI,QAAQ,GAAGN,OAAO,CAAC,YAAD,CAAxB;;AACAG,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA,qBACDD,GAAG,CAACE,KADH;AAAA,QACvBC,IADuB,cACvBA,IADuB;AAAA,uCACjBC,MADiB;AAAA,QACjBA,MADiB,kCACR,EADQ;AAG/B,MAAIC,OAAO,GAAGP,QAAQ,CAACQ,MAAT,CAAgBX,GAAG,IAChCA,GAAG,CAACS,MAAJ,CAAWG,WAAX,GAAyBC,QAAzB,CAAkCJ,MAAM,CAACG,WAAP,EAAlC,CADa,CAAd;;AAGA,MAAIJ,IAAJ,EAAU;AACT,QAAI,CAAC,CAAC,QAAD,EAAW,KAAX,EAAkBK,QAAlB,CAA2BL,IAA3B,CAAL,EAAuC;AACtC,aAAOF,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB,CAAP;AACA;AACD;;AAED,MAAIN,MAAJ,EAAY;AACX,QACC,CAAC,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,EAAiC,QAAjC,EAA2C,QAA3C,EAAqD,MAArD,EAA6DI,QAA7D,CACAJ,MADA,CADF,EAKC,OAAOH,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB,CAAP;AACD;;AACD,MAAIP,IAAJ,EAAU;AACTE,IAAAA,OAAO,CAACF,IAAR,CAAa,CAACQ,CAAD,EAAIC,CAAJ,KAAU;AACtB,aAAOD,CAAC,CAACR,IAAD,CAAD,GAAUS,CAAC,CAACT,IAAD,CAAX,GAAoB,CAApB,GAAwBQ,CAAC,CAACR,IAAD,CAAD,GAAUS,CAAC,CAACT,IAAD,CAAX,GAAoB,CAAC,CAArB,GAAyB,CAAxD;AACA,KAFD;AAGA;;AACDF,EAAAA,GAAG,CAACY,IAAJ,CAASR,OAAT;AACA,CA1BD","sourcesContent":["const express = require('express');\nconst morgan = require('morgan');\nconst cors = require('cors');\n\nconst app = express();\napp.arguments(morgan('common'));\napp.use(cors());\nconst playApps = require('./playApps');\napp.get('./apps', (req, res) => {\n\tconst { sort, genres = '' } = req.query;\n\n\tlet results = playApps.filter(app =>\n\t\tapp.genres.toLowerCase().includes(genres.toLowerCase())\n\t);\n\tif (sort) {\n\t\tif (!['rating', 'app'].includes(sort)) {\n\t\t\treturn res.status(400).send('Sort must be one of rating or app');\n\t\t}\n\t}\n\n\tif (genres) {\n\t\tif (\n\t\t\t!['Action', 'Puzzle', 'Strategy', 'Casual', 'Arcade', 'Card'].includes(\n\t\t\t\tgenres\n\t\t\t)\n\t\t)\n\t\t\treturn res.status(400).send('That genre does not exsist');\n\t}\n\tif (sort) {\n\t\tresults.sort((a, b) => {\n\t\t\treturn a[sort] > b[sort] ? 1 : a[sort] < b[sort] ? -1 : 0;\n\t\t});\n\t}\n\tres.json(results);\n});\n"]},"metadata":{},"sourceType":"module"}